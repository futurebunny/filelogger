{
  //"Logging": {
  //  // global filter settings
  //  "LogLevel": {
  //    "Default": "Information"
  //  },
    "Logging": {
      "LogLevel": {
        "Default": "Information",
        "DotNet.Samples": "Trace",
        "Intemporal.Experimental.Diagnostics.Logging": "Trace",
        "Microsoft": "Warning",
        "Microsoft.Hosting.Lifetime": "Information"
      },
      "Debug": {
        "LogLevel": {
          "Default": "Trace",
          "DotNet.Samples": "Trace",
          "Intemporal.Experimental.Diagnostics.Logging": "Trace",
          "Microsoft": "Warning",
          "Microsoft.Hosting.Lifetime": "Information"
        }
      },
      // provider level settings
      "File": {
        // first-level filters
        "LogLevel": {
          "MyApp": "Information",
          "Default": "Debug" // first-level filters can loosen the levels specified by the global filters
        },
        "BasePath": "Logs",
        "FileAccessMode": "KeepOpenAndAutoFlush",
        "FileEncodingName": "utf-8",
        "DateFormat": "yyyy-MM-dd",
        "CounterFormat": "00",
        "UseTickCount": true,
        "TickCountFormat": "X8",
        "MaxFileSize": 10485760,
        //"TextBuilderType": "MyApp.CustomLogEntryTextBuilder, MyApp",
        "TextBuilderType": "CustomFormat.SingleLineLogEntryTextBuilder, CustomFormat",
        "IncludeScopes": true,
        "MaxQueueSize": 100,
        "Files": [
          // a simple log file definition which inherits all settings from the provider (will produce files like "default-000.log")
          {
            //"Path": "default-<counter>.log"
            "Path": "MyApp-LogLevel[Debug]--dt<date:yyyy>-<date:MM>-<date:dd>--Iteration[<counter>]--TickCount[<ticks>].log"
          },
          // another log file definition which defines extra filters and overrides the Counter property (will produce files like "2019/08/other-00.log")
          {
            //"Path": "<date:yyyy>/<date:MM>/other-<counter>.log",
            //"Path": "<date:yyyy>-<date:MM>-<date:dd>-testrun-<counter>.log",
            //"Path": "MyApp-LogLevel[Critical]--dt<date:yyyy>-<date:MM>-<date:dd>--<counter>--StartTicks[0xABCD1234].log",
            //"Path": "MyApp-LogLevel[Warning]--dt<date:yyyy>-<date:MM>-<date:dd>--Iteration[<counter>]--TickCount[0xABCD1234].log",
            "Path": "MyApp-LogLevel[Warning]--dt<date:yyyy>-<date:MM>-<date:dd>--Iteration[<counter>]--TickCount[<ticks>].log",
            // second-level filters
            "MinLevel": {
              //"MyApp.SomeClass": "Error",
              "Default": "Warning" // this has no effect as second-level filters can only be more restrictive than first-level filters!
            },
            "CounterFormat": "0000"
          }
        ]
      }
    }
  }